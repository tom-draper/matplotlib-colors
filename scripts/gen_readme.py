import matplotlib as mpl
import matplotlib.pyplot as plt
from matplotlib_colors import register_cmaps, colormap_names

register_cmaps()

def title():
    return """# Showcase"""

def plot_colors(path: str):
    N_ROWS, N_COLS = 8, 4 # 13, 13 <-- for all in one figure 
    HEIGHT, WIDTH = 9, 16
            
    _, axes = plt.subplots(N_ROWS, N_COLS, figsize=(WIDTH, HEIGHT))
    
    idx = 0
    for row in range(N_ROWS):
        for col in range(N_COLS):
            ax = axes[row, col]
            cmap_id = colormap_names[idx]
            mpl.colorbar.ColorbarBase(ax, cmap=cmap_id, orientation='horizontal')
            ax.set_title(cmap_id, fontsize=8)
            ax.tick_params(left=False, right=False, labelleft=False, 
                           labelbottom=False, bottom=False)
            
            if idx >= len(colormap_names) - 1:
                plt.tight_layout()
                plt.savefig(path)
                return
            idx += 1
            
def colors():
    path = 'img/colors.png'
    return f'## Colors\n\nColors ![Colors](../{path})'

def plot_cmaps(path: str):
    N_ROWS, N_COLS = 2, 4 # 13, 13 <-- for all in one figure 
    HEIGHT, WIDTH = 9, 16
            
    _, axes = plt.subplots(N_ROWS, N_COLS, figsize=(WIDTH, HEIGHT))
    
    idx = 0
    for row in range(N_ROWS):
        for col in range(N_COLS):
            ax = axes[row, col]
            cmap_id = colormap_names[idx]
            mpl.colorbar.ColorbarBase(ax, cmap=cmap_id, orientation='horizontal')
            ax.set_title(cmap_id, fontsize=8)
            ax.tick_params(left=False, right=False, labelleft=False, 
                           labelbottom=False, bottom=False)
            
            if idx >= len(colormap_names) - 1:
                plt.tight_layout()
                plt.savefig(path)
                return
            idx += 1

def colormaps():
    path = 'img/colormaps.png'
    plot_cmaps(path)
    return f'## Colormaps\n\nColormaps ![Colormaps](../{path})'




def source():
    return """## Source\n\nA small portion of these color themes were sourced from color design websites, including <a href="https://coolors.co/">coolors.co</a> and <a href="https://www.canva.com/">canva.com</a>. Thanks!"""


def notice():
    return """\n---\nðŸ¤– This file was autogenerated by `scripts/gen_readme.py`."""


def build_readme():
    readme = '\n\n'.join([title(), colors(),  colormaps(), source(), notice()])
    return readme


if __name__ == '__main__':
    readme = build_readme()
    with open('matplotlib_colors/README.md', 'w', encoding="utf-8") as f:
        f.write(readme)
